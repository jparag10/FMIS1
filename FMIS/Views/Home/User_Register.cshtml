@model FMIS.Models.User
@{
    ViewBag.Title = "User_Register";
}
@Styles.Render("~/Content/css")
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-theme.css" rel="stylesheet" />
    <link href="~/Content/Styles.css" rel="stylesheet" />
    <title>Register Form</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

    <style>
        .transparent {
            zoom: 1;
            filter: alpha(opacity=100);
            opacity: 0.9;
        }
    </style>
</head>
<body style="background-image: url('../../Images/apple_drops_black_background_118624_1366x768.jpg');">
    <center>
        <div class="panel panel-danger transparent" style="width:40%; margin:auto;">
            <div class="panel-heading text-center"> <h4> User Register </h4> </div>
            <div class="panel-body">
                @using (Html.BeginForm())
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    if (ViewBag.triedOnce == "yes")
                    {
                        <h4> Username already Exists, please try another username. </h4>
                    }
                    <div class="form-group">
                        <label>Name :</label>
                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Email :</label>
                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Password :</label>
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label>Gender :</label>
                        @Html.DropDownListFor(x => x.Gender, new[]{
               new SelectListItem() {Text = "Male", Value = bool.TrueString},
               new SelectListItem() {Text = "Female", Value = bool.FalseString}
               }, "Choose Gender", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        <label>Contact No. :</label>
                        @Html.TextBoxFor(x => x.ContactNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ContactNo, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label>Height(cms) :</label>
                        @Html.TextBoxFor(x => x.Height, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Height, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label>Weight(Kg) :</label>
                        @Html.TextBoxFor(x => x.Weight, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label>Age :</label>
                        @Html.TextBoxFor(x => x.Age, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })

                    </div>
                    <div class="text-center">
                        <button class="btn btn-success" type="submit" value="Submit" onsubmit="submitForm()">Register</button>
                        <script>
                            function submitForm() {
                                if (confirm('Are you sure to submit form')) {
                                    var frm = document.getElementsByTagName("form");
                                    frm[0].submit();
                                }
                            }
                        </script>
                    </div>
                }
            </div>
        </div>
    </center>
</body>
</html>
